{"version":3,"sources":["../src/server.js"],"names":["require","config","PORT","process","env","console","log","TRANSLATOR_KEY_ID","app","use","express","json","urlencoded","extended","db","Database","translate","Translate","credentials","projectId","project_id","translateText","text","targetLanguage","response","post","req","res","body","roomId","logUrl","init","insert","close","status","send","error","code","message","get","query","queryResult","httpServer","http","createServer","wsServer","Server","cors","origin","allowEIO3","rooms","phoneUsers","deviceUsers","on","socket","onAny","event","reason","SERVER_DISCONNECT","currentSocketId","id","isPhoneUser","find","phone","socketId","undefined","targetPhone","targetDevice","device","uniqueId","filter","isHost","room","emit","disconnectSockets","deviceSocket","sockets","userList","leave","e","errorMsg","push","callback","currentRoom","disconnect","title","username","language","join","to","phoneUser","removeIndex","findIndex","splice","fontSize_per","fontColor","targetRoom","mode","comment","time","i","deviceUniqueId","user","then","result","err","length","reaction","targetId","handleListen","listen"],"mappings":"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","sourcesContent":["require(\"dotenv\").config();\nimport http from \"http\";\nimport { Server } from \"socket.io\";\nimport express from \"express\";\nimport { Translate } from \"@google-cloud/translate/build/src/v2\";\n\nimport { Database } from \"./database\";\nimport { SERVER_DISCONNECT } from \"./constants\";\nimport {\n  emitErrorToSelf,\n  emitErrorToDevice,\n  emitErrorToAll,\n  generateRoomId,\n  getUserList,\n  getDeviceByUniqueId,\n} from \"./utils\";\nimport * as credentials from \"./credentials\";\n\nconst PORT = process.env.PORT || 4000;\n\nconsole.log(process.env.TRANSLATOR_KEY_ID);\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\n\nconst db = new Database();\n\nconst translate = new Translate({\n  credentials: credentials,\n  projectId: credentials.project_id,\n});\n\n// 翻訳処理\nconst translateText = async (text, targetLanguage) => {\n  try {\n    let [response] = await translate.translate(text, targetLanguage);\n    return response;\n  } catch (error) {\n    console.log(`Error at translateText --> ${error}`);\n    return null;\n  }\n};\n\n// ログダウンロードURL送信\napp.post(\"/send-log-url\", async (req, res) => {\n  if (!req.body) {\n    return;\n  }\n\n  const { roomId, logUrl } = req.body;\n  try {\n    db.init();\n    db.insert(\"INSERT INTO log(roomId, logUrl) values(?, ?)\", [roomId, logUrl]);\n    db.close();\n\n    return res.status(201).send();\n  } catch (e) {\n    return res.status(500).send({\n      error: { code: 500, message: \"Fail to post data\" },\n    });\n  }\n});\n\n// ログダウンロードURL入手\napp.get(\"/get-log-url\", async (req, res) => {\n  const roomId = req.query.roomId;\n\n  try {\n    db.init();\n    const queryResult = await db.get(\"SELECT * FROM log WHERE roomId = ?\", [\n      roomId,\n    ]);\n    db.close();\n\n    return res.status(200).send({ logUrl: queryResult.logUrl });\n  } catch (e) {\n    return res.status(404).send({\n      error: { code: 404, message: \"Failed on getting data from database\" },\n    });\n  }\n});\n\nconst httpServer = http.createServer(app);\nconst wsServer = new Server(httpServer, {\n  cors: {\n    origin: \"*\",\n  },\n  // serveClient: false,\n  allowEIO3: true,\n});\n\nlet rooms = [];\nlet phoneUsers = [];\nlet deviceUsers = [];\n\nwsServer.on(\"connection\", (socket) => {\n  // イベント発火時のコンソール表示\n  socket.onAny((event) => {\n    console.log(`イベント: ${event}`);\n  });\n\n  // 接続切れの処理\n  socket.on(\"disconnect\", (reason) => {\n    if (reason !== SERVER_DISCONNECT) {\n      const currentSocketId = socket.id;\n\n      const isPhoneUser =\n        phoneUsers.find((phone) => phone.socketId === currentSocketId) !==\n        undefined\n          ? true\n          : false;\n\n      let targetPhone, targetDevice;\n      if (isPhoneUser) {\n        targetPhone = phoneUsers.find(\n          (phone) => phone.socketId === currentSocketId\n        );\n        targetDevice = deviceUsers.find(\n          (device) => device.uniqueId === targetPhone?.uniqueId\n        );\n      } else {\n        targetDevice = deviceUsers.find(\n          (device) => device.socketId === currentSocketId\n        );\n        targetPhone = phoneUsers.find(\n          (phone) => phone.uniqueId === targetDevice?.uniqueId\n        );\n      }\n\n      const roomId = targetPhone?.roomId;\n      const uniqueId = targetPhone?.uniqueId;\n\n      phoneUsers = phoneUsers.filter((phone) => phone.uniqueId !== uniqueId);\n      deviceUsers = deviceUsers.filter(\n        (device) => device.uniqueId !== uniqueId\n      );\n\n      if (targetPhone?.isHost) {\n        phoneUsers = [];\n        deviceUsers = [];\n        rooms = rooms.filter((room) => room.roomId !== roomId);\n\n        wsServer.emit(\"change-screen-leave\");\n\n        wsServer.emit(\"terminate-room-effect\");\n\n        wsServer.disconnectSockets();\n      } else {\n        try {\n          if (targetDevice !== undefined) {\n            console.log(\"Fire!!!!\");\n            const deviceSocket = wsServer.sockets.sockets.get(\n              targetDevice.socketId\n            );\n\n            wsServer.emit(\"leave-room-effect\", {\n              userList: getUserList(phoneUsers, roomId),\n            });\n\n            deviceSocket.leave(roomId);\n            socket.leave(roomId);\n          }\n        } catch (e) {\n          emitErrorToSelf(socket, { errorMsg: \"エラーが発生しました。\" });\n        }\n      }\n    }\n  });\n\n  // 本体起動時にデバイス情報を登録\n  socket.on(\"entry\", ({ uniqueId }) => {\n    deviceUsers.push({\n      socketId: socket.id,\n      uniqueId,\n      roomId: \"\",\n    });\n  });\n\n  // ルーム情報取得\n  socket.on(\"get-room\", ({ roomId }, callback) => {\n    const currentRoom = rooms.find((room) => room.roomId === roomId);\n    if (!currentRoom) {\n      emitErrorToSelf(socket, { errorMsg: \"現在のルームを把握できません。\" });\n      socket.disconnect(true);\n      return;\n    }\n\n    callback({\n      title: currentRoom.title,\n      userList: getUserList(phoneUsers, roomId),\n    });\n  });\n\n  // ルーム作成\n  socket.on(\n    \"create-room\",\n    ({ title, username, uniqueId, language }, callback) => {\n      const roomId = generateRoomId(5);\n\n      rooms.push({\n        title: title,\n        username: username,\n        uniqueId: uniqueId,\n        language: language,\n        roomId: roomId,\n      });\n\n      phoneUsers.push({\n        socketId: socket.id,\n        uniqueId: uniqueId,\n        roomId: roomId,\n        username: username,\n        language: language,\n        isHost: true,\n      });\n\n      const targetDevice = getDeviceByUniqueId(deviceUsers, uniqueId);\n      if (targetDevice !== undefined) {\n        targetDevice.roomId = roomId;\n\n        const deviceSocket = wsServer.sockets.sockets.get(\n          targetDevice.socketId\n        );\n        deviceSocket.join(roomId);\n      }\n\n      socket.join(roomId);\n\n      callback({\n        roomId: roomId,\n      });\n\n      try {\n        wsServer.in(roomId).emit(\"join-room-effect\", {\n          userList: getUserList(phoneUsers, roomId),\n        });\n      } catch {\n        emitErrorToAll(wsServer, {\n          roomId,\n          errorMsg: \"エラーが発生しました。\",\n        });\n      }\n\n      try {\n        socket\n          .to(targetDevice.socketId)\n          .emit(\"change-screen-enter\", { roomId, username });\n      } catch {\n        emitErrorToSelf(socket, {\n          errorMsg: \"本体デバイスを検索できませんでした。\",\n        });\n        socket.disconnect(true);\n      }\n\n      console.log(\"rooms: \", rooms);\n      console.log(\"phoneUsers: \", phoneUsers);\n      console.log(\"deviceUsers: \", deviceUsers);\n    }\n  );\n\n  //ルーム参加処理\n  socket.on(\n    \"join-room\",\n    function ({ username, roomId, uniqueId, language }, callback) {\n      phoneUsers.push({\n        socketId: socket.id,\n        uniqueId: uniqueId,\n        roomId: roomId,\n        username: username,\n        language: language,\n        isHost: false,\n      });\n\n      const targetDevice = getDeviceByUniqueId(deviceUsers, uniqueId);\n      if (targetDevice !== undefined) {\n        targetDevice.roomId = roomId;\n\n        const deviceSocket = wsServer.sockets.sockets.get(\n          targetDevice.socketId\n        );\n        deviceSocket.join(roomId);\n      }\n\n      socket.join(roomId);\n\n      // FIXME: コールバックしないといけないかフロントのコードに合わせて削除してもいいと思う。\n      callback({\n        userList: getUserList(phoneUsers, roomId),\n      });\n\n      try {\n        wsServer.emit(\"join-room-effect\", {\n          userList: getUserList(phoneUsers, roomId),\n        });\n      } catch (e) {\n        emitErrorToAll(wsServer, {\n          roomId,\n          errorMsg: \"エラーが発生しました。\",\n        });\n      }\n\n      try {\n        socket\n          .to(targetDevice.socketId)\n          .emit(\"change-screen-enter\", { roomId, username });\n      } catch (e) {\n        emitErrorToSelf(socket, {\n          errorMsg: \"本体デバイスを検索できませんでした。\",\n        });\n        socket.disconnect(true);\n      }\n\n      console.log(\"rooms: \", rooms);\n      console.log(\"phoneUsers: \", phoneUsers);\n      console.log(\"deviceUsers: \", deviceUsers);\n    }\n  );\n\n  // ルーム退出\n  socket.on(\"leave-room\", ({ uniqueId }) => {\n    const targetDevice = getDeviceByUniqueId(deviceUsers, uniqueId);\n\n    const phoneUser = phoneUsers.find((phone) => phone.uniqueId === uniqueId);\n\n    if (phoneUser.isHost) {\n      phoneUsers = [];\n      deviceUsers = [];\n      rooms = rooms.filter((room) => room.roomId !== phoneUser.roomId);\n\n      wsServer.emit(\"change-screen-leave\");\n\n      wsServer.emit(\"terminate-room-effect\");\n\n      wsServer.disconnectSockets();\n    } else {\n      const removeIndex = phoneUsers.findIndex(\n        (phone) => phone.uniqueId === uniqueId\n      );\n      phoneUsers.splice(removeIndex, 1);\n\n      deviceUsers = deviceUsers.filter(\n        (device) => device.uniqueId !== uniqueId\n      );\n\n      try {\n        socket.to(targetDevice.socketId).emit(\"change-screen-leave\");\n      } catch (e) {\n        emitErrorToSelf(socket, { errorMsg: \"エラーが発生しました。\" });\n        socket.disconnect(true);\n      }\n\n      try {\n        wsServer.emit(\"leave-room-effect\", {\n          userList: getUserList(phoneUsers, phoneUser.roomId),\n        });\n\n        if (targetDevice !== undefined) {\n          const deviceSocket = wsServer.sockets.sockets.get(\n            targetDevice.socketId\n          );\n          deviceSocket.leave(phoneUser.roomId);\n        }\n\n        socket.leave(phoneUser.roomId);\n      } catch (e) {\n        emitErrorToAll(wsServer, {\n          roomId: phoneUser.roomId,\n          errorMsg: \"エラーが発生しました。\",\n        });\n      }\n    }\n    console.log(\"rooms: \", rooms);\n    console.log(\"phoneUsers: \", phoneUsers);\n    console.log(\"deviceUsers: \", deviceUsers);\n  });\n\n  // ルーム解散\n  socket.on(\"terminate-room\", ({ roomId }) => {\n    phoneUsers = phoneUsers.filter((phone) => phone.roomId !== roomId);\n    deviceUsers = deviceUsers.filter((device) => device.roomId !== roomId);\n    rooms = rooms.filter((room) => room.roomId !== roomId);\n\n    try {\n      wsServer.emit(\"terminate-room-effect\");\n\n      wsServer.emit(\"change-screen-leave\");\n\n      wsServer.disconnectSockets(roomId);\n    } catch (e) {\n      emitErrorToAll(wsServer, {\n        roomId,\n        errorMsg: \"エラーが発生しました。\",\n      });\n      socket.disconnect(true);\n    }\n\n    console.log(\"rooms: \", rooms);\n    console.log(\"phoneUsers: \", phoneUsers);\n    console.log(\"deviceUsers: \", deviceUsers);\n  });\n\n  // アクセシビリティ更新\n  socket.on(\"change-accessibility\", ({ fontSize_per, fontColor, uniqueId }) => {\n    const targetDevice = getDeviceByUniqueId(deviceUsers, uniqueId);\n\n    if (targetDevice !== undefined) {\n      try {\n        socket\n          .to(targetDevice.socketId)\n          .emit(\"change-accessibility-effect\", { fontSize_per, fontColor });\n      } catch (error) {\n        emitErrorToSelf(socket, {\n          errorMsg: \"アクセシビリティ変更にエラーが発生しました。\",\n        });\n      }\n    }\n  });\n\n  // 議題変更\n  socket.on(\"updated-title\", ({ roomId, title }) => {\n    const targetRoom = rooms.find((room) => room.roomId === roomId);\n\n    if (targetRoom !== undefined) {\n      try {\n        wsServer.in(targetRoom.roomId).emit(\"updated-title-effect\", { title });\n      } catch (error) {\n        emitErrorToAll(wsServer, {\n          roomId: targetRoom.roomId,\n          errorMsg: \"タイトル更新にエラーが発生しました。\",\n        });\n      }\n    }\n  });\n\n  // モード切替\n  socket.on(\"change-mode\", ({ uniqueId, mode }) => {\n    const targetDevice = getDeviceByUniqueId(deviceUsers, uniqueId);\n\n    if (targetDevice !== undefined) {\n      try {\n        socket.to(targetDevice.socketId).emit(\"change-mode-effect\", { mode });\n      } catch (error) {\n        emitErrorToSelf(socket, { errorMsg: \"エラーが発生しました。\" });\n      }\n    }\n  });\n\n  // 音声検知\n  socket.on(\"send-detected-voice\", ({ uniqueId, comment, time }) => {\n    const targetDevice = getDeviceByUniqueId(deviceUsers, uniqueId);\n\n    for (let i = 0; i < deviceUsers.length; i++) {\n      let socketId = deviceUsers[i].socketId;\n      let deviceUniqueId = deviceUsers[i].uniqueId;\n      let phoneUser = phoneUsers.find(\n        (user) => user.uniqueId === deviceUniqueId\n      );\n      let targetLanguage = phoneUser.language;\n\n      translateText(comment, targetLanguage)\n        .then(async (result) => {\n          console.log(i, \" = \", socketId, \" , \", result);\n          socket.to(socketId).emit(\"emit-log\", {\n            username: targetDevice.username,\n            comment: result,\n            time,\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  });\n\n  // ジェスチャー検知\n  socket.on(\"send-detected-gesture\", ({ uniqueId, reaction, time }) => {\n    const targetDevice = getDeviceByUniqueId(deviceUsers, uniqueId);\n\n    try {\n      wsServer.emit(\"emit-reaction\", {\n        username: targetDevice.username,\n        reaction,\n        time,\n      });\n    } catch (e) {\n      emitErrorToDevice(socket, {\n        targetId: targetDevice.socketId,\n        errorMsg: \"エラーが発生しました。\",\n      });\n    }\n  });\n});\n\nconst handleListen = () => console.log(`Listening on port:${PORT}`);\n\nhttpServer.listen(PORT, \"0.0.0.0\", handleListen);\n"],"file":"server.js"}
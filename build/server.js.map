{"version":3,"sources":["../src/server.js"],"names":["require","config","PORT","process","env","app","use","express","json","urlencoded","extended","db","Database","translate","Translate","credentials","type","project_id","PROJECT_ID","private_key_id","TRANSLATOR_KEY_ID","private_key","TRANSLATOR_KEY","client_email","CLIENT_EMAIL","client_id","CLIENT_ID","auth_uri","token_uri","auth_provider_x509_cert_url","client_x509_cert_url","CLIENT_CERT","projectId","translateText","text","targetLanguage","response","console","log","post","req","res","body","roomId","logUrl","init","insert","close","status","send","error","code","message","get","params","queryResult","httpServer","http","createServer","wsServer","Server","cors","origin","allowEIO3","rooms","phoneUsers","deviceUsers","on","socket","onAny","event","reason","SERVER_DISCONNECT","currentSocketId","id","isPhoneUser","find","phone","socketId","undefined","targetPhone","targetDevice","device","uniqueId","filter","isHost","room","emit","disconnectSockets","deviceSocket","sockets","userList","leave","e","errorMsg","findResult","length","push","callback","currentRoom","disconnect","title","username","language","join","to","phoneUser","removeIndex","findIndex","splice","fontSize_per","fontColor","targetRoom","mode","comment","time","i","deviceUniqueId","user","then","result","err","targetId","reactionId","handleListen","listen"],"mappings":";;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AARAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAkBA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AAEA,IAAMG,GAAG,GAAG,0BAAZ;AACAA,GAAG,CAACC,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQC,oBAAQE,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AAEA,IAAMC,EAAE,GAAG,IAAIC,kBAAJ,EAAX;AAEA,IAAMC,SAAS,GAAG,IAAIC,YAAJ,CAAc;AAC9BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,IAAI,EAAE,iBADK;AAEXC,IAAAA,UAAU,EAAEd,OAAO,CAACC,GAAR,CAAYc,UAFb;AAGXC,IAAAA,cAAc,EAAEhB,OAAO,CAACC,GAAR,CAAYgB,iBAHjB;AAIXC,IAAAA,WAAW,EAAElB,OAAO,CAACC,GAAR,CAAYkB,cAJd;AAKXC,IAAAA,YAAY,EAAEpB,OAAO,CAACC,GAAR,CAAYoB,YALf;AAMXC,IAAAA,SAAS,EAAEtB,OAAO,CAACC,GAAR,CAAYsB,SANZ;AAOXC,IAAAA,QAAQ,EAAE,2CAPC;AAQXC,IAAAA,SAAS,EAAE,qCARA;AASXC,IAAAA,2BAA2B,EAAE,4CATlB;AAUXC,IAAAA,oBAAoB,EAAE3B,OAAO,CAACC,GAAR,CAAY2B;AAVvB,GADiB;AAa9BC,EAAAA,SAAS,EAAE7B,OAAO,CAACC,GAAR,CAAYc;AAbO,CAAd,CAAlB,C,CAgBA;;AACA,IAAMe,aAAa;AAAA,2FAAG,iBAAOC,IAAP,EAAaC,cAAb;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEKtB,SAAS,CAACA,SAAV,CAAoBqB,IAApB,EAA0BC,cAA1B,CAFL;;AAAA;AAAA;AAAA;AAEbC,YAAAA,QAFa;AAAA,6CAGXA,QAHW;;AAAA;AAAA;AAAA;AAKlBC,YAAAA,OAAO,CAACC,GAAR;AALkB,6CAMX,IANW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbL,aAAa;AAAA;AAAA;AAAA,GAAnB,C,CAUA;;;AACA5B,GAAG,CAACkC,IAAJ,CAAS,eAAT;AAAA,4FAA0B,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACxBJ,YAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AADwB,wBAGGE,GAAG,CAACE,IAHP,EAGhBC,MAHgB,aAGhBA,MAHgB,EAGRC,MAHQ,aAGRA,MAHQ,EAGa;;AAHb;AAKtBjC,YAAAA,EAAE,CAACkC,IAAH;AACAlC,YAAAA,EAAE,CAACmC,MAAH,CAAU,8CAAV,EAA0D,CAACH,MAAD,EAASC,MAAT,CAA1D;AACAjC,YAAAA,EAAE,CAACoC,KAAH;AAPsB,8CASfN,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,EATe;;AAAA;AAAA;AAAA;AAAA,8CAWfR,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,cAAAA,KAAK,EAAE;AAAEC,gBAAAA,IAAI,EAAE,GAAR;AAAaC,gBAAAA,OAAO,EAAE;AAAtB;AADmB,aAArB,CAXe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA,K,CAiBA;;AACA/C,GAAG,CAACgD,GAAJ,CAAQ,cAAR;AAAA,4FAAwB,kBAAOb,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBJ,YAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACQK,YAAAA,MAFc,GAEHH,GAAG,CAACc,MAFD,CAEdX,MAFc,EAES;;AAFT;AAIpBhC,YAAAA,EAAE,CAACkC,IAAH;AAJoB;AAAA,mBAKMlC,EAAE,CAAC0C,GAAH,CAAO,oCAAP,EAA6C,CACrEV,MADqE,CAA7C,CALN;;AAAA;AAKdY,YAAAA,WALc;AAQpB5C,YAAAA,EAAE,CAACoC,KAAH;AARoB,8CAUbN,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEL,cAAAA,MAAM,EAAEW,WAAW,CAACX;AAAtB,aAArB,CAVa;;AAAA;AAAA;AAAA;AAAA,8CAYbH,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,cAAAA,KAAK,EAAE;AAAEC,gBAAAA,IAAI,EAAE,GAAR;AAAaC,gBAAAA,OAAO,EAAE;AAAtB;AADmB,aAArB,CAZa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAkBA,IAAMI,UAAU,GAAGC,iBAAKC,YAAL,CAAkBrD,GAAlB,CAAnB;;AACA,IAAMsD,QAAQ,GAAG,IAAIC,cAAJ,CAAWJ,UAAX,EAAuB;AACtCK,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE;AADJ,GADgC;AAItC;AACAC,EAAAA,SAAS,EAAE;AAL2B,CAAvB,CAAjB;AAQA,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,UAAU,GAAG,EAAjB;AACA,IAAIC,WAAW,GAAG,EAAlB;AAEAP,QAAQ,CAACQ,EAAT,CAAY,YAAZ,EAA0B,UAACC,MAAD,EAAY;AACpC;AACAA,EAAAA,MAAM,CAACC,KAAP,CAAa,UAACC,KAAD,EAAW;AACtBjC,IAAAA,OAAO,CAACC,GAAR,qCAAqBgC,KAArB;AACD,GAFD,EAFoC,CAMpC;;AACAF,EAAAA,MAAM,CAACD,EAAP,CAAU,YAAV,EAAwB,UAACI,MAAD,EAAY;AAClClC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCiC,MAAnC;;AACA,QAAIA,MAAM,KAAKC,4BAAf,EAAkC;AAAA;;AAChC,UAAMC,eAAe,GAAGL,MAAM,CAACM,EAA/B;AAEA,UAAMC,WAAW,GACfV,UAAU,CAACW,IAAX,CAAgB,UAACC,KAAD;AAAA,eAAWA,KAAK,CAACC,QAAN,KAAmBL,eAA9B;AAAA,OAAhB,MACAM,SADA,GAEI,IAFJ,GAGI,KAJN;AAMA,UAAIC,WAAJ,EAAiBC,YAAjB;;AACA,UAAIN,WAAJ,EAAiB;AACfK,QAAAA,WAAW,GAAGf,UAAU,CAACW,IAAX,CACZ,UAACC,KAAD;AAAA,iBAAWA,KAAK,CAACC,QAAN,KAAmBL,eAA9B;AAAA,SADY,CAAd;AAGAQ,QAAAA,YAAY,GAAGf,WAAW,CAACU,IAAZ,CACb,UAACM,MAAD;AAAA;;AAAA,iBAAYA,MAAM,CAACC,QAAP,sBAAoBH,WAApB,iDAAoB,aAAaG,QAAjC,CAAZ;AAAA,SADa,CAAf;AAGD,OAPD,MAOO;AACLF,QAAAA,YAAY,GAAGf,WAAW,CAACU,IAAZ,CACb,UAACM,MAAD;AAAA,iBAAYA,MAAM,CAACJ,QAAP,KAAoBL,eAAhC;AAAA,SADa,CAAf;AAGAO,QAAAA,WAAW,GAAGf,UAAU,CAACW,IAAX,CACZ,UAACC,KAAD;AAAA;;AAAA,iBAAWA,KAAK,CAACM,QAAN,uBAAmBF,YAAnB,kDAAmB,cAAcE,QAAjC,CAAX;AAAA,SADY,CAAd;AAGD;;AAED,UAAMxC,MAAM,GACV,kBAAAqC,WAAW,UAAX,sDAAarC,MAAb,MAAwBoC,SAAxB,qBACIE,YADJ,mDACI,eAActC,MADlB,oBAEIqC,WAFJ,kDAEI,cAAarC,MAHnB;AAIA,UAAMwC,QAAQ,GACZ,kBAAAH,WAAW,UAAX,sDAAaG,QAAb,MAA0BJ,SAA1B,qBACIE,YADJ,mDACI,eAAcE,QADlB,oBAEIH,WAFJ,kDAEI,cAAaG,QAHnB;AAKA9C,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDK,MAAjD,EAAyDwC,QAAzD;AAEAlB,MAAAA,UAAU,GAAGA,UAAU,CAACmB,MAAX,CAAkB,UAACP,KAAD;AAAA,eAAWA,KAAK,CAACM,QAAN,KAAmBA,QAA9B;AAAA,OAAlB,CAAb;AACAjB,MAAAA,WAAW,GAAGA,WAAW,CAACkB,MAAZ,CACZ,UAACF,MAAD;AAAA,eAAYA,MAAM,CAACC,QAAP,KAAoBA,QAAhC;AAAA,OADY,CAAd;AAIA9C,MAAAA,OAAO,CAACC,GAAR,CACE,0CADF,EAEE2B,UAFF,EAGEC,WAHF;;AAMA,2BAAIc,WAAJ,0CAAI,cAAaK,MAAjB,EAAyB;AACvBpB,QAAAA,UAAU,GAAG,EAAb;AACAC,QAAAA,WAAW,GAAG,EAAd;AACAF,QAAAA,KAAK,GAAGA,KAAK,CAACoB,MAAN,CAAa,UAACE,IAAD;AAAA,iBAAUA,IAAI,CAAC3C,MAAL,KAAgBA,MAA1B;AAAA,SAAb,CAAR;AAEAN,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAqB,QAAAA,QAAQ,CAAC4B,IAAT,CAAc,qBAAd;AAEAlD,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAqB,QAAAA,QAAQ,CAAC4B,IAAT,CAAc,uBAAd;AAEA5B,QAAAA,QAAQ,CAAC6B,iBAAT;AACD,OAZD,MAYO;AACL,YAAI;AACF,cAAIP,YAAY,KAAKF,SAArB,EAAgC;AAC9B,gBAAMU,YAAY,GAAG9B,QAAQ,CAAC+B,OAAT,CAAiBA,OAAjB,CAAyBrC,GAAzB,CACnB4B,YAAY,CAACH,QADM,CAArB;AAIAzC,YAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAqB,YAAAA,QAAQ,CAAC4B,IAAT,CAAc,mBAAd,EAAmC;AACjCI,cAAAA,QAAQ,EAAE,wBAAY1B,UAAZ,EAAwBtB,MAAxB;AADuB,aAAnC;AAIA8C,YAAAA,YAAY,CAACG,KAAb,CAAmBjD,MAAnB;AACAyB,YAAAA,MAAM,CAACwB,KAAP,CAAajD,MAAb;AACD;AACF,SAdD,CAcE,OAAOkD,CAAP,EAAU;AACV,sCAAgBzB,MAAhB,EAAwB;AAAE0B,YAAAA,QAAQ,EAAE;AAAZ,WAAxB;AACD;AACF;;AACDzD,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC4B,WAAhC;AACA7B,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B2B,UAA/B;AACD;AACF,GApFD,EAPoC,CA6FpC;;AACAG,EAAAA,MAAM,CAACD,EAAP,CAAU,OAAV,EAAmB,iBAAkB;AAAA,QAAfgB,QAAe,SAAfA,QAAe;AACnC,QAAMY,UAAU,GAAG7B,WAAW,CAACkB,MAAZ,CACjB,UAACF,MAAD;AAAA,aAAYA,MAAM,CAACC,QAAP,KAAoBA,QAAhC;AAAA,KADiB,CAAnB;;AAIA,QAAIY,UAAU,CAACC,MAAX,GAAoB,CAAxB,EAA2B;AACzB9B,MAAAA,WAAW,GAAGA,WAAW,CAACkB,MAAZ,CACZ,UAACF,MAAD;AAAA,eAAYA,MAAM,CAACC,QAAP,KAAoBA,QAAhC;AAAA,OADY,CAAd;AAGD;;AAEDjB,IAAAA,WAAW,CAAC+B,IAAZ,CAAiB;AACfnB,MAAAA,QAAQ,EAAEV,MAAM,CAACM,EADF;AAEfS,MAAAA,QAAQ,EAARA,QAFe;AAGfxC,MAAAA,MAAM,EAAE;AAHO,KAAjB;AAKAN,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqC4B,WAArC;AACD,GAjBD,EA9FoC,CAiHpC;;AACAE,EAAAA,MAAM,CAACD,EAAP,CAAU,UAAV,EAAsB,iBAAa+B,QAAb,EAA0B;AAAA,QAAvBvD,MAAuB,SAAvBA,MAAuB;AAC9C,QAAMwD,WAAW,GAAGnC,KAAK,CAACY,IAAN,CAAW,UAACU,IAAD;AAAA,aAAUA,IAAI,CAAC3C,MAAL,KAAgBA,MAA1B;AAAA,KAAX,CAApB;;AACA,QAAI,CAACwD,WAAL,EAAkB;AAChB,kCAAgB/B,MAAhB,EAAwB;AAAE0B,QAAAA,QAAQ,EAAE;AAAZ,OAAxB;AACA1B,MAAAA,MAAM,CAACgC,UAAP,CAAkB,IAAlB;AACA;AACD;;AAEDF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,KAAK,EAAEF,WAAW,CAACE,KADZ;AAEPV,MAAAA,QAAQ,EAAE,wBAAY1B,UAAZ,EAAwBtB,MAAxB;AAFH,KAAD,CAAR;AAID,GAZD,EAlHoC,CAgIpC;;AACAyB,EAAAA,MAAM,CAACD,EAAP,CACE,aADF,EAEE,iBAA0C+B,QAA1C,EAAuD;AAAA,QAApDG,KAAoD,SAApDA,KAAoD;AAAA,QAA7CC,QAA6C,SAA7CA,QAA6C;AAAA,QAAnCnB,QAAmC,SAAnCA,QAAmC;AAAA,QAAzBoB,QAAyB,SAAzBA,QAAyB;AACrD,QAAM5D,MAAM,GAAG,2BAAe,CAAf,CAAf;AAEAqB,IAAAA,KAAK,CAACiC,IAAN,CAAW;AACTI,MAAAA,KAAK,EAAEA,KADE;AAETC,MAAAA,QAAQ,EAAEA,QAFD;AAGTnB,MAAAA,QAAQ,EAAEA,QAHD;AAIToB,MAAAA,QAAQ,EAAEA,QAJD;AAKT5D,MAAAA,MAAM,EAAEA;AALC,KAAX;AAQAsB,IAAAA,UAAU,CAACgC,IAAX,CAAgB;AACdnB,MAAAA,QAAQ,EAAEV,MAAM,CAACM,EADH;AAEdS,MAAAA,QAAQ,EAAEA,QAFI;AAGdxC,MAAAA,MAAM,EAAEA,MAHM;AAId2D,MAAAA,QAAQ,EAAEA,QAJI;AAKdC,MAAAA,QAAQ,EAAEA,QALI;AAMdlB,MAAAA,MAAM,EAAE;AANM,KAAhB;AASA,QAAMJ,YAAY,GAAG,gCAAoBf,WAApB,EAAiCiB,QAAjC,CAArB;;AACA,QAAIF,YAAY,KAAKF,SAArB,EAAgC;AAC9B1C,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiD2C,YAAjD;AACAA,MAAAA,YAAY,CAACtC,MAAb,GAAsBA,MAAtB;AAEA,UAAM8C,YAAY,GAAG9B,QAAQ,CAAC+B,OAAT,CAAiBA,OAAjB,CAAyBrC,GAAzB,CACnB4B,YAAY,CAACH,QADM,CAArB;;AAIA,UAAIW,YAAY,KAAKV,SAArB,EAAgC;AAC9BU,QAAAA,YAAY,CAACe,IAAb,CAAkB7D,MAAlB;AACD,OAFD,MAEO;AACL;AACD;AACF;;AAEDyB,IAAAA,MAAM,CAACoC,IAAP,CAAY7D,MAAZ;AAEAuD,IAAAA,QAAQ,CAAC;AACPvD,MAAAA,MAAM,EAAEA;AADD,KAAD,CAAR;;AAIA,QAAI;AACFN,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAqB,MAAAA,QAAQ,MAAR,CAAYhB,MAAZ,EAAoB4C,IAApB,CAAyB,kBAAzB,EAA6C;AAC3CI,QAAAA,QAAQ,EAAE,wBAAY1B,UAAZ,EAAwBtB,MAAxB;AADiC,OAA7C;AAGD,KALD,CAKE,gBAAM;AACN,iCAAegB,QAAf,EAAyB;AACvBhB,QAAAA,MAAM,EAANA,MADuB;AAEvBmD,QAAAA,QAAQ,EAAE;AAFa,OAAzB;AAID;;AAED,QAAI;AACFzD,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA8B,MAAAA,MAAM,CACHqC,EADH,CACMxB,YAAY,CAACH,QADnB,EAEGS,IAFH,CAEQ,qBAFR,EAE+B;AAAE5C,QAAAA,MAAM,EAANA,MAAF;AAAU2D,QAAAA,QAAQ,EAARA;AAAV,OAF/B;AAGD,KALD,CAKE,iBAAM;AACN,kCAAgBlC,MAAhB,EAAwB;AACtB0B,QAAAA,QAAQ,EAAE;AADY,OAAxB;AAGA1B,MAAAA,MAAM,CAACgC,UAAP,CAAkB,IAAlB;AACD;;AAED/D,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B0B,KAA9B;AACA3B,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC2B,UAAnC;AACA5B,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC4B,WAApC;AACD,GAvEH,EAjIoC,CA2MpC;;AACAE,EAAAA,MAAM,CAACD,EAAP,CACE,WADF,EAEE,iBAAoD+B,QAApD,EAA8D;AAAA,QAAlDI,QAAkD,SAAlDA,QAAkD;AAAA,QAAxC3D,MAAwC,SAAxCA,MAAwC;AAAA,QAAhCwC,QAAgC,SAAhCA,QAAgC;AAAA,QAAtBoB,QAAsB,SAAtBA,QAAsB;AAC5DtC,IAAAA,UAAU,CAACgC,IAAX,CAAgB;AACdnB,MAAAA,QAAQ,EAAEV,MAAM,CAACM,EADH;AAEdS,MAAAA,QAAQ,EAAEA,QAFI;AAGdxC,MAAAA,MAAM,EAAEA,MAHM;AAId2D,MAAAA,QAAQ,EAAEA,QAJI;AAKdC,MAAAA,QAAQ,EAAEA,QALI;AAMdlB,MAAAA,MAAM,EAAE;AANM,KAAhB;AASA,QAAMJ,YAAY,GAAG,gCAAoBf,WAApB,EAAiCiB,QAAjC,CAArB;;AACA,QAAIF,YAAY,KAAKF,SAArB,EAAgC;AAC9BE,MAAAA,YAAY,CAACtC,MAAb,GAAsBA,MAAtB;AAEA,UAAM8C,YAAY,GAAG9B,QAAQ,CAAC+B,OAAT,CAAiBA,OAAjB,CAAyBrC,GAAzB,CACnB4B,YAAY,CAACH,QADM,CAArB;AAGAW,MAAAA,YAAY,CAACe,IAAb,CAAkB7D,MAAlB;AACD;;AAEDyB,IAAAA,MAAM,CAACoC,IAAP,CAAY7D,MAAZ,EApB4D,CAsB5D;;AACAuD,IAAAA,QAAQ,CAAC;AACPP,MAAAA,QAAQ,EAAE,wBAAY1B,UAAZ,EAAwBtB,MAAxB;AADH,KAAD,CAAR;;AAIA,QAAI;AACFN,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAqB,MAAAA,QAAQ,CAAC4B,IAAT,CAAc,kBAAd,EAAkC;AAChCI,QAAAA,QAAQ,EAAE,wBAAY1B,UAAZ,EAAwBtB,MAAxB;AADsB,OAAlC;AAGD,KALD,CAKE,OAAOkD,CAAP,EAAU;AACV,iCAAelC,QAAf,EAAyB;AACvBhB,QAAAA,MAAM,EAANA,MADuB;AAEvBmD,QAAAA,QAAQ,EAAE;AAFa,OAAzB;AAID;;AAED,QAAI;AACFzD,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA8B,MAAAA,MAAM,CACHqC,EADH,CACMxB,YAAY,CAACH,QADnB,EAEGS,IAFH,CAEQ,qBAFR,EAE+B;AAAE5C,QAAAA,MAAM,EAANA,MAAF;AAAU2D,QAAAA,QAAQ,EAARA;AAAV,OAF/B;AAGD,KALD,CAKE,OAAOT,CAAP,EAAU;AACV,kCAAgBzB,MAAhB,EAAwB;AACtB0B,QAAAA,QAAQ,EAAE;AADY,OAAxB;AAGA1B,MAAAA,MAAM,CAACgC,UAAP,CAAkB,IAAlB;AACD;;AAED/D,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B0B,KAA9B;AACA3B,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC2B,UAAnC;AACA5B,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC4B,WAApC;AACD,GAxDH,EA5MoC,CAuQpC;;AACAE,EAAAA,MAAM,CAACD,EAAP,CAAU,YAAV,EAAwB,iBAAkB;AAAA,QAAfgB,QAAe,SAAfA,QAAe;AACxC,QAAMF,YAAY,GAAG,gCAAoBf,WAApB,EAAiCiB,QAAjC,CAArB;AAEA,QAAMuB,SAAS,GAAGzC,UAAU,CAACW,IAAX,CAAgB,UAACC,KAAD;AAAA,aAAWA,KAAK,CAACM,QAAN,KAAmBA,QAA9B;AAAA,KAAhB,CAAlB;;AAEA,QAAIuB,SAAS,CAACrB,MAAd,EAAsB;AACpBpB,MAAAA,UAAU,GAAG,EAAb;AACAC,MAAAA,WAAW,GAAG,EAAd;AACAF,MAAAA,KAAK,GAAGA,KAAK,CAACoB,MAAN,CAAa,UAACE,IAAD;AAAA,eAAUA,IAAI,CAAC3C,MAAL,KAAgB+D,SAAS,CAAC/D,MAApC;AAAA,OAAb,CAAR;AAEAN,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAqB,MAAAA,QAAQ,CAAC4B,IAAT,CAAc,qBAAd;AAEAlD,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAqB,MAAAA,QAAQ,CAAC4B,IAAT,CAAc,uBAAd;AAEA5B,MAAAA,QAAQ,CAAC6B,iBAAT;AACD,KAZD,MAYO;AACL,UAAMmB,WAAW,GAAG1C,UAAU,CAAC2C,SAAX,CAClB,UAAC/B,KAAD;AAAA,eAAWA,KAAK,CAACM,QAAN,KAAmBA,QAA9B;AAAA,OADkB,CAApB;AAGAlB,MAAAA,UAAU,CAAC4C,MAAX,CAAkBF,WAAlB,EAA+B,CAA/B;AAEAzC,MAAAA,WAAW,GAAGA,WAAW,CAACkB,MAAZ,CACZ,UAACF,MAAD;AAAA,eAAYA,MAAM,CAACC,QAAP,KAAoBA,QAAhC;AAAA,OADY,CAAd;;AAIA,UAAI;AACF9C,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA8B,QAAAA,MAAM,CAACqC,EAAP,CAAUxB,YAAY,CAACH,QAAvB,EAAiCS,IAAjC,CAAsC,qBAAtC;AACD,OAHD,CAGE,OAAOM,CAAP,EAAU;AACV,oCAAgBzB,MAAhB,EAAwB;AAAE0B,UAAAA,QAAQ,EAAE;AAAZ,SAAxB;AACA1B,QAAAA,MAAM,CAACgC,UAAP,CAAkB,IAAlB;AACD;;AAED,UAAI;AACF/D,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAqB,QAAAA,QAAQ,CAAC4B,IAAT,CAAc,mBAAd,EAAmC;AACjCI,UAAAA,QAAQ,EAAE,wBAAY1B,UAAZ,EAAwByC,SAAS,CAAC/D,MAAlC;AADuB,SAAnC;;AAIA,YAAIsC,YAAY,KAAKF,SAArB,EAAgC;AAC9B,cAAMU,YAAY,GAAG9B,QAAQ,CAAC+B,OAAT,CAAiBA,OAAjB,CAAyBrC,GAAzB,CACnB4B,YAAY,CAACH,QADM,CAArB;AAGAW,UAAAA,YAAY,CAACG,KAAb,CAAmBc,SAAS,CAAC/D,MAA7B;AACD;;AAEDyB,QAAAA,MAAM,CAACwB,KAAP,CAAac,SAAS,CAAC/D,MAAvB;AACD,OAdD,CAcE,OAAOkD,CAAP,EAAU;AACV,mCAAelC,QAAf,EAAyB;AACvBhB,UAAAA,MAAM,EAAE+D,SAAS,CAAC/D,MADK;AAEvBmD,UAAAA,QAAQ,EAAE;AAFa,SAAzB;AAID;AACF;;AACDzD,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B0B,KAA9B;AACA3B,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC2B,UAAnC;AACA5B,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC4B,WAApC;AACD,GA3DD,EAxQoC,CAqUpC;;AACAE,EAAAA,MAAM,CAACD,EAAP,CAAU,gBAAV,EAA4B,iBAAgB;AAAA,QAAbxB,MAAa,SAAbA,MAAa;AAC1CsB,IAAAA,UAAU,GAAGA,UAAU,CAACmB,MAAX,CAAkB,UAACP,KAAD;AAAA,aAAWA,KAAK,CAAClC,MAAN,KAAiBA,MAA5B;AAAA,KAAlB,CAAb;AACAuB,IAAAA,WAAW,GAAGA,WAAW,CAACkB,MAAZ,CAAmB,UAACF,MAAD;AAAA,aAAYA,MAAM,CAACvC,MAAP,KAAkBA,MAA9B;AAAA,KAAnB,CAAd;AACAqB,IAAAA,KAAK,GAAGA,KAAK,CAACoB,MAAN,CAAa,UAACE,IAAD;AAAA,aAAUA,IAAI,CAAC3C,MAAL,KAAgBA,MAA1B;AAAA,KAAb,CAAR;AAEAN,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC2B,UAAjC;AACA5B,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC4B,WAAlC;;AAEA,QAAI;AACF7B,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAqB,MAAAA,QAAQ,CAAC4B,IAAT,CAAc,uBAAd;AAEAlD,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAqB,MAAAA,QAAQ,CAAC4B,IAAT,CAAc,qBAAd;AAEA5B,MAAAA,QAAQ,CAAC6B,iBAAT,CAA2B7C,MAA3B;AACD,KARD,CAQE,OAAOkD,CAAP,EAAU;AACV,iCAAelC,QAAf,EAAyB;AACvBhB,QAAAA,MAAM,EAANA,MADuB;AAEvBmD,QAAAA,QAAQ,EAAE;AAFa,OAAzB;AAIA1B,MAAAA,MAAM,CAACgC,UAAP,CAAkB,IAAlB;AACD;;AAED/D,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B0B,KAA9B;AACA3B,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC2B,UAAnC;AACA5B,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC4B,WAApC;AACD,GA3BD,EAtUoC,CAmWpC;;AACAE,EAAAA,MAAM,CAACD,EAAP,CAAU,sBAAV,EAAkC,kBAA2C;AAAA,QAAxC2C,YAAwC,UAAxCA,YAAwC;AAAA,QAA1BC,SAA0B,UAA1BA,SAA0B;AAAA,QAAf5B,QAAe,UAAfA,QAAe;AAC3E,QAAMF,YAAY,GAAG,gCAAoBf,WAApB,EAAiCiB,QAAjC,CAArB;;AAEA,QAAIF,YAAY,KAAKF,SAArB,EAAgC;AAC9B,UAAI;AACF1C,QAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACA8B,QAAAA,MAAM,CACHqC,EADH,CACMxB,YAAY,CAACH,QADnB,EAEGS,IAFH,CAEQ,6BAFR,EAEuC;AAAEuB,UAAAA,YAAY,EAAZA,YAAF;AAAgBC,UAAAA,SAAS,EAATA;AAAhB,SAFvC;AAGD,OALD,CAKE,OAAO7D,KAAP,EAAc;AACd,oCAAgBkB,MAAhB,EAAwB;AACtB0B,UAAAA,QAAQ,EAAE;AADY,SAAxB;AAGD;AACF;AACF,GAfD,EApWoC,CAqXpC;;AACA1B,EAAAA,MAAM,CAACD,EAAP,CAAU,eAAV,EAA2B,kBAAuB;AAAA,QAApBxB,MAAoB,UAApBA,MAAoB;AAAA,QAAZ0D,KAAY,UAAZA,KAAY;AAChD,QAAMW,UAAU,GAAGhD,KAAK,CAACY,IAAN,CAAW,UAACU,IAAD;AAAA,aAAUA,IAAI,CAAC3C,MAAL,KAAgBA,MAA1B;AAAA,KAAX,CAAnB;;AAEA,QAAIqE,UAAU,KAAKjC,SAAnB,EAA8B;AAC5B,UAAI;AACF1C,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAqB,QAAAA,QAAQ,MAAR,CAAYqD,UAAU,CAACrE,MAAvB,EAA+B4C,IAA/B,CAAoC,sBAApC,EAA4D;AAAEc,UAAAA,KAAK,EAALA;AAAF,SAA5D;AACD,OAHD,CAGE,OAAOnD,KAAP,EAAc;AACd,mCAAeS,QAAf,EAAyB;AACvBhB,UAAAA,MAAM,EAAEqE,UAAU,CAACrE,MADI;AAEvBmD,UAAAA,QAAQ,EAAE;AAFa,SAAzB;AAID;AACF;AACF,GAdD,EAtXoC,CAsYpC;;AACA1B,EAAAA,MAAM,CAACD,EAAP,CAAU,aAAV,EAAyB,kBAAwB;AAAA,QAArBgB,QAAqB,UAArBA,QAAqB;AAAA,QAAX8B,IAAW,UAAXA,IAAW;AAC/C,QAAMhC,YAAY,GAAG,gCAAoBf,WAApB,EAAiCiB,QAAjC,CAArB;;AAEA,QAAIF,YAAY,KAAKF,SAArB,EAAgC;AAC9B,UAAI;AACF1C,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA8B,QAAAA,MAAM,CAACqC,EAAP,CAAUxB,YAAY,CAACH,QAAvB,EAAiCS,IAAjC,CAAsC,oBAAtC,EAA4D;AAAE0B,UAAAA,IAAI,EAAJA;AAAF,SAA5D;AACD,OAHD,CAGE,OAAO/D,KAAP,EAAc;AACd,oCAAgBkB,MAAhB,EAAwB;AAAE0B,UAAAA,QAAQ,EAAE;AAAZ,SAAxB;AACD;AACF;AACF,GAXD,EAvYoC,CAoZpC;;AACA1B,EAAAA,MAAM,CAACD,EAAP,CAAU,qBAAV,EAAiC,kBAAiC;AAAA,QAA9BgB,QAA8B,UAA9BA,QAA8B;AAAA,QAApB+B,OAAoB,UAApBA,OAAoB;AAAA,QAAXC,IAAW,UAAXA,IAAW;AAChE,QAAMlC,YAAY,GAAG,gCAAoBf,WAApB,EAAiCiB,QAAjC,CAArB;AAEA,QAAMH,WAAW,GAAG,+BAAmBf,UAAnB,EAA+BkB,QAA/B,CAApB;;AAEA,QAAIF,YAAY,KAAKF,SAAjB,IAA8BC,WAAW,KAAKD,SAAlD,EAA6D;AAC3D,UAAI;AAAA,mCACOqC,CADP;AAEA,cAAItC,QAAQ,GAAGZ,WAAW,CAACkD,CAAD,CAAX,CAAetC,QAA9B;AACA,cAAIuC,cAAc,GAAGnD,WAAW,CAACkD,CAAD,CAAX,CAAejC,QAApC;AACA,cAAIuB,SAAS,GAAGzC,UAAU,CAACW,IAAX,CACd,UAAC0C,IAAD;AAAA,mBAAUA,IAAI,CAACnC,QAAL,KAAkBkC,cAA5B;AAAA,WADc,CAAhB;AAGA,cAAIlF,cAAc,GAAGuE,SAAS,CAACH,QAA/B;AAEAtE,UAAAA,aAAa,CAACiF,OAAD,EAAU/E,cAAV,CAAb,CACGoF,IADH;AAAA,uGACQ,kBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AACJnF,sBAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCwC,QAApC,EAA8C,KAA9C,EAAqD0C,MAArD;AACApD,sBAAAA,MAAM,CAACqC,EAAP,CAAU3B,QAAV,EAAoBS,IAApB,CAAyB,UAAzB,EAAqC;AACnCe,wBAAAA,QAAQ,EAAEtB,WAAW,CAACsB,QADa;AAEnCY,wBAAAA,OAAO,EAAEM,MAF0B;AAGnCL,wBAAAA,IAAI,EAAJA;AAHmC,uBAArC;;AAFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADR;;AAAA;AAAA;AAAA;AAAA,wBASS,UAACM,GAAD,EAAS;AACdpF,YAAAA,OAAO,CAACC,GAAR,CAAYmF,GAAZ;AACD,WAXH;AATA;;AACF,aAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlD,WAAW,CAAC8B,MAAhC,EAAwCoB,CAAC,EAAzC,EAA6C;AAAA,gBAApCA,CAAoC;AAoB5C;AACF,OAtBD,CAsBE,OAAOlE,KAAP,EAAc;AACd,sCAAkBkB,MAAlB,EAA0B;AACxBsD,UAAAA,QAAQ,EAAEzC,YAAY,CAACH,QADC;AAExBgB,UAAAA,QAAQ,EAAE;AAFc,SAA1B;AAID;AACF,KA7BD,MA6BO;AACL;AACD;AACF,GArCD,EArZoC,CA4bpC;;AACA1B,EAAAA,MAAM,CAACD,EAAP,CAAU,uBAAV,EAAmC,kBAAoC;AAAA,QAAjCgB,QAAiC,UAAjCA,QAAiC;AAAA,QAAvBwC,UAAuB,UAAvBA,UAAuB;AAAA,QAAXR,IAAW,UAAXA,IAAW;AACrE,QAAMlC,YAAY,GAAG,gCAAoBf,WAApB,EAAiCiB,QAAjC,CAArB;AAEA,QAAMH,WAAW,GAAG,+BAAmBf,UAAnB,EAA+BkB,QAA/B,CAApB;;AAEA,QAAIF,YAAY,KAAKF,SAAjB,IAA8BC,WAAW,KAAKD,SAAlD,EAA6D;AAC3D,UAAI;AACF1C,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAqB,QAAAA,QAAQ,CAAC4B,IAAT,CAAc,eAAd,EAA+B;AAC7Be,UAAAA,QAAQ,EAAEtB,WAAW,CAACsB,QADO;AAE7BqB,UAAAA,UAAU,EAAVA,UAF6B;AAG7BR,UAAAA,IAAI,EAAJA;AAH6B,SAA/B;AAKD,OAPD,CAOE,OAAOtB,CAAP,EAAU;AACV,sCAAkBzB,MAAlB,EAA0B;AACxBsD,UAAAA,QAAQ,EAAEzC,YAAY,CAACH,QADC;AAExBgB,UAAAA,QAAQ,EAAE;AAFc,SAA1B;AAID;AACF,KAdD,MAcO;AACL;AACD;AACF,GAtBD;AAuBD,CApdD;;AAsdA,IAAM8B,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAMvF,OAAO,CAACC,GAAR,6BAAiCpC,IAAjC,EAAN;AAAA,CAArB;;AAEAsD,UAAU,CAACqE,MAAX,CAAkB3H,IAAlB,EAAwB,SAAxB,EAAmC0H,YAAnC","sourcesContent":["require(\"dotenv\").config();\nimport http from \"http\";\nimport { Server } from \"socket.io\";\nimport express from \"express\";\nimport { Translate } from \"@google-cloud/translate/build/src/v2\";\n\nimport { Database } from \"./database\";\nimport { SERVER_DISCONNECT } from \"./constants\";\nimport {\n  emitErrorToSelf,\n  emitErrorToDevice,\n  emitErrorToAll,\n  generateRoomId,\n  getUserList,\n  getPhoneByUniqueId,\n  getDeviceByUniqueId,\n} from \"./utils\";\n\nconst PORT = process.env.PORT || 4000;\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\n\nconst db = new Database();\n\nconst translate = new Translate({\n  credentials: {\n    type: \"service_account\",\n    project_id: process.env.PROJECT_ID,\n    private_key_id: process.env.TRANSLATOR_KEY_ID,\n    private_key: process.env.TRANSLATOR_KEY,\n    client_email: process.env.CLIENT_EMAIL,\n    client_id: process.env.CLIENT_ID,\n    auth_uri: \"https://accounts.google.com/o/oauth2/auth\",\n    token_uri: \"https://oauth2.googleapis.com/token\",\n    auth_provider_x509_cert_url: \"https://www.googleapis.com/oauth2/v1/certs\",\n    client_x509_cert_url: process.env.CLIENT_CERT,\n  },\n  projectId: process.env.PROJECT_ID,\n});\n\n// 翻訳処理\nconst translateText = async (text, targetLanguage) => {\n  try {\n    let [response] = await translate.translate(text, targetLanguage);\n    return response;\n  } catch (error) {\n    console.log(`Error at translateText --> ${error}`);\n    return null;\n  }\n};\n\n// ログダウンロードURL送信\napp.post(\"/send-log-url\", async (req, res) => {\n  console.log(\"Saving logs to database...\");\n\n  const { roomId, logUrl } = req.body; // フロントがどの経路でパラメタを渡しているのか確認する必要あり。\n  try {\n    db.init();\n    db.insert(\"INSERT INTO log(roomId, logUrl) values(?, ?)\", [roomId, logUrl]);\n    db.close();\n\n    return res.status(201).send();\n  } catch (e) {\n    return res.status(500).send({\n      error: { code: 500, message: \"Fail to post data\" },\n    });\n  }\n});\n\n// ログダウンロードURL入手\napp.get(\"/get-log-url\", async (req, res) => {\n  console.log(\"Getting logs by room id!\");\n  const { roomId } = req.params; // フロントがどの経路でパラメタを渡しているのか確認する必要あり。\n  try {\n    db.init();\n    const queryResult = await db.get(\"SELECT * FROM log WHERE roomId = ?\", [\n      roomId,\n    ]);\n    db.close();\n\n    return res.status(200).send({ logUrl: queryResult.logUrl });\n  } catch (e) {\n    return res.status(404).send({\n      error: { code: 404, message: \"Failed on getting data from database\" },\n    });\n  }\n});\n\nconst httpServer = http.createServer(app);\nconst wsServer = new Server(httpServer, {\n  cors: {\n    origin: \"*\",\n  },\n  // serveClient: false,\n  allowEIO3: true,\n});\n\nlet rooms = [];\nlet phoneUsers = [];\nlet deviceUsers = [];\n\nwsServer.on(\"connection\", (socket) => {\n  // イベント発火時のコンソール表示\n  socket.onAny((event) => {\n    console.log(`イベント: ${event}`);\n  });\n\n  // 接続切れの処理\n  socket.on(\"disconnect\", (reason) => {\n    console.log(\"disconnect reason: \", reason);\n    if (reason !== SERVER_DISCONNECT) {\n      const currentSocketId = socket.id;\n\n      const isPhoneUser =\n        phoneUsers.find((phone) => phone.socketId === currentSocketId) !==\n        undefined\n          ? true\n          : false;\n\n      let targetPhone, targetDevice;\n      if (isPhoneUser) {\n        targetPhone = phoneUsers.find(\n          (phone) => phone.socketId === currentSocketId\n        );\n        targetDevice = deviceUsers.find(\n          (device) => device.uniqueId === targetPhone?.uniqueId\n        );\n      } else {\n        targetDevice = deviceUsers.find(\n          (device) => device.socketId === currentSocketId\n        );\n        targetPhone = phoneUsers.find(\n          (phone) => phone.uniqueId === targetDevice?.uniqueId\n        );\n      }\n\n      const roomId =\n        targetPhone?.roomId === undefined\n          ? targetDevice?.roomId\n          : targetPhone?.roomId;\n      const uniqueId =\n        targetPhone?.uniqueId === undefined\n          ? targetDevice?.uniqueId\n          : targetPhone?.uniqueId;\n\n      console.log(\"Processed Show roomId, uniqueID: \", roomId, uniqueId);\n\n      phoneUsers = phoneUsers.filter((phone) => phone.uniqueId !== uniqueId);\n      deviceUsers = deviceUsers.filter(\n        (device) => device.uniqueId !== uniqueId\n      );\n\n      console.log(\n        \"Processed Show phoneUsers, deviceUsers: \",\n        phoneUsers,\n        deviceUsers\n      );\n\n      if (targetPhone?.isHost) {\n        phoneUsers = [];\n        deviceUsers = [];\n        rooms = rooms.filter((room) => room.roomId !== roomId);\n\n        console.log(\"Emit: change-screen-leave\");\n        wsServer.emit(\"change-screen-leave\");\n\n        console.log(\"Emit: terminate-room-effect\");\n        wsServer.emit(\"terminate-room-effect\");\n\n        wsServer.disconnectSockets();\n      } else {\n        try {\n          if (targetDevice !== undefined) {\n            const deviceSocket = wsServer.sockets.sockets.get(\n              targetDevice.socketId\n            );\n\n            console.log(\"Emit: leave-room-effect\");\n            wsServer.emit(\"leave-room-effect\", {\n              userList: getUserList(phoneUsers, roomId),\n            });\n\n            deviceSocket.leave(roomId);\n            socket.leave(roomId);\n          }\n        } catch (e) {\n          emitErrorToSelf(socket, { errorMsg: \"エラーが発生しました。\" });\n        }\n      }\n      console.log(\"Result devices: \", deviceUsers);\n      console.log(\"Result phones: \", phoneUsers);\n    }\n  });\n\n  // 本体起動時にデバイス情報を登録\n  socket.on(\"entry\", ({ uniqueId }) => {\n    const findResult = deviceUsers.filter(\n      (device) => device.uniqueId === uniqueId\n    );\n\n    if (findResult.length > 0) {\n      deviceUsers = deviceUsers.filter(\n        (device) => device.uniqueId !== uniqueId\n      );\n    }\n\n    deviceUsers.push({\n      socketId: socket.id,\n      uniqueId,\n      roomId: \"\",\n    });\n    console.log(\"Pushed devicesUsers: \", deviceUsers);\n  });\n\n  // ルーム情報取得\n  socket.on(\"get-room\", ({ roomId }, callback) => {\n    const currentRoom = rooms.find((room) => room.roomId === roomId);\n    if (!currentRoom) {\n      emitErrorToSelf(socket, { errorMsg: \"現在のルームを把握できません。\" });\n      socket.disconnect(true);\n      return;\n    }\n\n    callback({\n      title: currentRoom.title,\n      userList: getUserList(phoneUsers, roomId),\n    });\n  });\n\n  // ルーム作成\n  socket.on(\n    \"create-room\",\n    ({ title, username, uniqueId, language }, callback) => {\n      const roomId = generateRoomId(5);\n\n      rooms.push({\n        title: title,\n        username: username,\n        uniqueId: uniqueId,\n        language: language,\n        roomId: roomId,\n      });\n\n      phoneUsers.push({\n        socketId: socket.id,\n        uniqueId: uniqueId,\n        roomId: roomId,\n        username: username,\n        language: language,\n        isHost: true,\n      });\n\n      const targetDevice = getDeviceByUniqueId(deviceUsers, uniqueId);\n      if (targetDevice !== undefined) {\n        console.log(\"TargetDevice for creating rooms: \", targetDevice);\n        targetDevice.roomId = roomId;\n\n        const deviceSocket = wsServer.sockets.sockets.get(\n          targetDevice.socketId\n        );\n\n        if (deviceSocket !== undefined) {\n          deviceSocket.join(roomId);\n        } else {\n          return;\n        }\n      }\n\n      socket.join(roomId);\n\n      callback({\n        roomId: roomId,\n      });\n\n      try {\n        console.log(\"Emit: join-room-effect\");\n        wsServer.in(roomId).emit(\"join-room-effect\", {\n          userList: getUserList(phoneUsers, roomId),\n        });\n      } catch {\n        emitErrorToAll(wsServer, {\n          roomId,\n          errorMsg: \"エラーが発生しました。\",\n        });\n      }\n\n      try {\n        console.log(\"Emit: change-screen-enter\");\n        socket\n          .to(targetDevice.socketId)\n          .emit(\"change-screen-enter\", { roomId, username });\n      } catch {\n        emitErrorToSelf(socket, {\n          errorMsg: \"本体デバイスを検索できませんでした。\",\n        });\n        socket.disconnect(true);\n      }\n\n      console.log(\"Result rooms: \", rooms);\n      console.log(\"Result phoneUsers: \", phoneUsers);\n      console.log(\"Result deviceUsers: \", deviceUsers);\n    }\n  );\n\n  //ルーム参加処理\n  socket.on(\n    \"join-room\",\n    function ({ username, roomId, uniqueId, language }, callback) {\n      phoneUsers.push({\n        socketId: socket.id,\n        uniqueId: uniqueId,\n        roomId: roomId,\n        username: username,\n        language: language,\n        isHost: false,\n      });\n\n      const targetDevice = getDeviceByUniqueId(deviceUsers, uniqueId);\n      if (targetDevice !== undefined) {\n        targetDevice.roomId = roomId;\n\n        const deviceSocket = wsServer.sockets.sockets.get(\n          targetDevice.socketId\n        );\n        deviceSocket.join(roomId);\n      }\n\n      socket.join(roomId);\n\n      // FIXME: コールバックしないといけないかフロントのコードに合わせて削除してもいいと思う。\n      callback({\n        userList: getUserList(phoneUsers, roomId),\n      });\n\n      try {\n        console.log(\"Emit: join-room-effect\");\n        wsServer.emit(\"join-room-effect\", {\n          userList: getUserList(phoneUsers, roomId),\n        });\n      } catch (e) {\n        emitErrorToAll(wsServer, {\n          roomId,\n          errorMsg: \"エラーが発生しました。\",\n        });\n      }\n\n      try {\n        console.log(\"Emit: change-screen-enter\");\n        socket\n          .to(targetDevice.socketId)\n          .emit(\"change-screen-enter\", { roomId, username });\n      } catch (e) {\n        emitErrorToSelf(socket, {\n          errorMsg: \"本体デバイスを検索できませんでした。\",\n        });\n        socket.disconnect(true);\n      }\n\n      console.log(\"Result rooms: \", rooms);\n      console.log(\"Result phoneUsers: \", phoneUsers);\n      console.log(\"Result deviceUsers: \", deviceUsers);\n    }\n  );\n\n  // ルーム退出\n  socket.on(\"leave-room\", ({ uniqueId }) => {\n    const targetDevice = getDeviceByUniqueId(deviceUsers, uniqueId);\n\n    const phoneUser = phoneUsers.find((phone) => phone.uniqueId === uniqueId);\n\n    if (phoneUser.isHost) {\n      phoneUsers = [];\n      deviceUsers = [];\n      rooms = rooms.filter((room) => room.roomId !== phoneUser.roomId);\n\n      console.log(\"Emit: change-screen-leave\");\n      wsServer.emit(\"change-screen-leave\");\n\n      console.log(\"Emit: terminate-room-effect\");\n      wsServer.emit(\"terminate-room-effect\");\n\n      wsServer.disconnectSockets();\n    } else {\n      const removeIndex = phoneUsers.findIndex(\n        (phone) => phone.uniqueId === uniqueId\n      );\n      phoneUsers.splice(removeIndex, 1);\n\n      deviceUsers = deviceUsers.filter(\n        (device) => device.uniqueId !== uniqueId\n      );\n\n      try {\n        console.log(\"Emit: change-screen-leave\");\n        socket.to(targetDevice.socketId).emit(\"change-screen-leave\");\n      } catch (e) {\n        emitErrorToSelf(socket, { errorMsg: \"エラーが発生しました。\" });\n        socket.disconnect(true);\n      }\n\n      try {\n        console.log(\"Emit: leave-room-effect\");\n        wsServer.emit(\"leave-room-effect\", {\n          userList: getUserList(phoneUsers, phoneUser.roomId),\n        });\n\n        if (targetDevice !== undefined) {\n          const deviceSocket = wsServer.sockets.sockets.get(\n            targetDevice.socketId\n          );\n          deviceSocket.leave(phoneUser.roomId);\n        }\n\n        socket.leave(phoneUser.roomId);\n      } catch (e) {\n        emitErrorToAll(wsServer, {\n          roomId: phoneUser.roomId,\n          errorMsg: \"エラーが発生しました。\",\n        });\n      }\n    }\n    console.log(\"Result rooms: \", rooms);\n    console.log(\"Result phoneUsers: \", phoneUsers);\n    console.log(\"Result deviceUsers: \", deviceUsers);\n  });\n\n  // ルーム解散\n  socket.on(\"terminate-room\", ({ roomId }) => {\n    phoneUsers = phoneUsers.filter((phone) => phone.roomId !== roomId);\n    deviceUsers = deviceUsers.filter((device) => device.roomId !== roomId);\n    rooms = rooms.filter((room) => room.roomId !== roomId);\n\n    console.log(\"Processed phone: \", phoneUsers);\n    console.log(\"Processed device: \", deviceUsers);\n\n    try {\n      console.log(\"Emit: terminate-room-effect\");\n      wsServer.emit(\"terminate-room-effect\");\n\n      console.log(\"Emit: change-screen-leave\");\n      wsServer.emit(\"change-screen-leave\");\n\n      wsServer.disconnectSockets(roomId);\n    } catch (e) {\n      emitErrorToAll(wsServer, {\n        roomId,\n        errorMsg: \"エラーが発生しました。\",\n      });\n      socket.disconnect(true);\n    }\n\n    console.log(\"Result rooms: \", rooms);\n    console.log(\"Result phoneUsers: \", phoneUsers);\n    console.log(\"Result deviceUsers: \", deviceUsers);\n  });\n\n  // アクセシビリティ更新\n  socket.on(\"change-accessibility\", ({ fontSize_per, fontColor, uniqueId }) => {\n    const targetDevice = getDeviceByUniqueId(deviceUsers, uniqueId);\n\n    if (targetDevice !== undefined) {\n      try {\n        console.log(\"Emit: change-accessibility-effect\");\n        socket\n          .to(targetDevice.socketId)\n          .emit(\"change-accessibility-effect\", { fontSize_per, fontColor });\n      } catch (error) {\n        emitErrorToSelf(socket, {\n          errorMsg: \"アクセシビリティ変更にエラーが発生しました。\",\n        });\n      }\n    }\n  });\n\n  // 議題変更\n  socket.on(\"updated-title\", ({ roomId, title }) => {\n    const targetRoom = rooms.find((room) => room.roomId === roomId);\n\n    if (targetRoom !== undefined) {\n      try {\n        console.log(\"Emit: updated-title-effect\");\n        wsServer.in(targetRoom.roomId).emit(\"updated-title-effect\", { title });\n      } catch (error) {\n        emitErrorToAll(wsServer, {\n          roomId: targetRoom.roomId,\n          errorMsg: \"タイトル更新にエラーが発生しました。\",\n        });\n      }\n    }\n  });\n\n  // モード切替\n  socket.on(\"change-mode\", ({ uniqueId, mode }) => {\n    const targetDevice = getDeviceByUniqueId(deviceUsers, uniqueId);\n\n    if (targetDevice !== undefined) {\n      try {\n        console.log(\"Emit: change-mode-effect\");\n        socket.to(targetDevice.socketId).emit(\"change-mode-effect\", { mode });\n      } catch (error) {\n        emitErrorToSelf(socket, { errorMsg: \"エラーが発生しました。\" });\n      }\n    }\n  });\n\n  // 音声検知\n  socket.on(\"send-detected-voice\", ({ uniqueId, comment, time }) => {\n    const targetDevice = getDeviceByUniqueId(deviceUsers, uniqueId);\n\n    const targetPhone = getPhoneByUniqueId(phoneUsers, uniqueId);\n\n    if (targetDevice !== undefined && targetPhone !== undefined) {\n      try {\n        for (let i = 0; i < deviceUsers.length; i++) {\n          let socketId = deviceUsers[i].socketId;\n          let deviceUniqueId = deviceUsers[i].uniqueId;\n          let phoneUser = phoneUsers.find(\n            (user) => user.uniqueId === deviceUniqueId\n          );\n          let targetLanguage = phoneUser.language;\n\n          translateText(comment, targetLanguage)\n            .then(async (result) => {\n              console.log(\"Emit log, SocketId: \", socketId, \" , \", result);\n              socket.to(socketId).emit(\"emit-log\", {\n                username: targetPhone.username,\n                comment: result,\n                time,\n              });\n            })\n            .catch((err) => {\n              console.log(err);\n            });\n        }\n      } catch (error) {\n        emitErrorToDevice(socket, {\n          targetId: targetDevice.socketId,\n          errorMsg: \"エラーが発生しました。\",\n        });\n      }\n    } else {\n      return;\n    }\n  });\n\n  // ジェスチャー検知\n  socket.on(\"send-detected-gesture\", ({ uniqueId, reactionId, time }) => {\n    const targetDevice = getDeviceByUniqueId(deviceUsers, uniqueId);\n\n    const targetPhone = getPhoneByUniqueId(phoneUsers, uniqueId);\n\n    if (targetDevice !== undefined && targetPhone !== undefined) {\n      try {\n        console.log(\"Emit: emit-reaction\");\n        wsServer.emit(\"emit-reaction\", {\n          username: targetPhone.username,\n          reactionId,\n          time,\n        });\n      } catch (e) {\n        emitErrorToDevice(socket, {\n          targetId: targetDevice.socketId,\n          errorMsg: \"エラーが発生しました。\",\n        });\n      }\n    } else {\n      return;\n    }\n  });\n});\n\nconst handleListen = () => console.log(`Listening on port:${PORT}`);\n\nhttpServer.listen(PORT, \"0.0.0.0\", handleListen);\n"],"file":"server.js"}
{"version":3,"sources":["../src/database.js"],"names":["Database","init","db","sqlite3","run","query","params","Promise","resolve","reject","get","err","row","args","close"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEaA,Q;AACX,sBAAc;AAAA;;AACZ,SAAKC,IAAL;AACD;;;;WAED,gBAAO;AACL,WAAKC,EAAL,GAAU,IAAIC,mBAAQH,QAAZ,CAAqB,UAArB,CAAV;AACA,WAAKE,EAAL,CAAQE,GAAR,CAAY,gDAAZ;AACD;;;;yEAED,iBAAUC,KAAV,EAAiBC,MAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iDACS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,kBAAA,KAAI,CAACP,EAAL,CAAQQ,GAAR,CAAYL,KAAZ,EAAmBC,MAAnB,EAA2B,UAACK,GAAD,EAAMC,GAAN,EAAc;AACvC,wBAAID,GAAJ,EAAS;AACP,6BAAOF,MAAM,CAACE,GAAD,CAAb;AACD;;AACDH,oBAAAA,OAAO,CAACI,GAAD,CAAP;AACD,mBALD;AAMD,iBAPM,CADT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAWA,gBAAOP,KAAP,EAAcQ,IAAd,EAAoB;AAAA;;AAClB,uBAAKX,EAAL,EAAQE,GAAR,kBAAYC,KAAZ,4BAAsBQ,IAAtB;AACD;;;WAED,iBAAQ;AACN,WAAKX,EAAL,CAAQY,KAAR;AACD","sourcesContent":["import sqlite3 from \"sqlite3\";\n\nexport class Database {\n  constructor() {\n    this.init();\n  }\n\n  init() {\n    this.db = new sqlite3.Database(\"./log.db\");\n    this.db.run(\"CREATE TABLE IF NOT EXISTS log(roomId, logUrl)\");\n  }\n\n  async get(query, params) {\n    return new Promise((resolve, reject) => {\n      this.db.get(query, params, (err, row) => {\n        if (err) {\n          return reject(err);\n        }\n        resolve(row);\n      });\n    });\n  }\n\n  insert(query, args) {\n    this.db.run(query, ...args);\n  }\n\n  close() {\n    this.db.close();\n  }\n}\n"],"file":"database.js"}